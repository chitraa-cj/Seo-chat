import type JwksRsa from "jwks-rsa";
import { JwksClient } from "jwks-rsa";
import type { RequestLike } from "./types";
export interface JWKSPluginInput {
    jwksEndpoint: string | ((req: RequestLike) => string);
    rolesPath?: string;
    globalAuthentication?: boolean;
    bindPredicate?: "all" | "any";
    issuer?: string | string[];
    audience?: string | RegExp | (string | RegExp)[];
}
declare class Neo4jGraphQLAuthJWKSPlugin {
    rolesPath?: string;
    isGlobalAuthenticationEnabled?: boolean;
    client: JwksClient | null;
    options: JwksRsa.Options;
    bindPredicate: "all" | "any";
    input: JWKSPluginInput;
    constructor(input: JWKSPluginInput);
    tryToResolveKeys(req: RequestLike): void;
    decode<T>(token: string): Promise<T | undefined>;
    private verifyJWKS;
}
export default Neo4jGraphQLAuthJWKSPlugin;
//# sourceMappingURL=Neo4jGraphQLAuthJWKSPlugin.d.ts.map