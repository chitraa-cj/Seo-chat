import jsonwebtoken from "jsonwebtoken";
import type { RequestLike } from "./types";
export interface JWTPluginInput {
    secret: jsonwebtoken.Secret | ((req: RequestLike) => jsonwebtoken.Secret);
    noVerify?: boolean;
    globalAuthentication?: boolean;
    rolesPath?: string;
    bindPredicate?: "all" | "any";
    issuer?: string | string[];
    audience?: string | RegExp | (string | RegExp)[];
}
declare class Neo4jGraphQLAuthJWTPlugin {
    private secret;
    private noVerify?;
    rolesPath?: string;
    isGlobalAuthenticationEnabled?: boolean;
    input: JWTPluginInput;
    bindPredicate: "all" | "any";
    constructor(input: JWTPluginInput);
    tryToResolveKeys(req: RequestLike): void;
    decode<T>(token: string): Promise<T | undefined>;
}
export default Neo4jGraphQLAuthJWTPlugin;
//# sourceMappingURL=Neo4jGraphQLAuthJWTPlugin.d.ts.map